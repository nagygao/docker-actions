name: Frontend PR

on:
  pull_request:
    branches: ["main"]

jobs:
  build:
    name: Build and test
    runs-on: self-hosted
    outputs:
      short_hash: ${{ steps.get_short_hash.outputs.SHORT_HASH }}
    steps:
      - uses: actions/checkout@v3
      - name: Get short hash
        id: get_short_hash
        run: |
          SHORT_HASH=$(git ls-remote origin 'refs/pull/${{ github.event.number }}/merge'  | cut -c1-8)
          echo $SHORT_HASH
          echo "::set-output name=SHORT_HASH::$SHORT_HASH"
      - name: Build the Docker image
        run: |
          echo ${{ steps.get_short_hash.outputs.SHORT_HASH }}
          docker build . --file Dockerfile --tag nagygao/github-test:${{ steps.get_short_hash.outputs.SHORT_HASH }}
          docker image ls
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Push image
        run: |
          docker push nagygao/github-test:${{ steps.get_short_hash.outputs.SHORT_HASH }}
  deploy:
    name: Deploy to PR environment
    runs-on: self-hosted
    needs: build
    steps:
      - name: Terraform apply
        working-directory: terraform
        env:
          TF_VAR_image_tag: ${{ needs.build.outputs.short_hash }}
          TF_VAR_namespace: terraform
          TF_VAR_pr_number: ${{ github.event.number }}
        run: |
          terraform init
          terraform apply -auto-approve
      - name: Manual approval
        uses: trstringer/manual-approval@v1
        timeout-minutes: 120
        with:
          secret: ${{ github.TOKEN }}
          approvers: nagygao
          minimum-approvals: 1
          issue-title: "Deploying v1.3.5 to prod from staging"
  cleanup:
    name: Cleanup environment
    runs-on: self-hosted
    needs: [build, deploy]
    steps:
      - name: Terraform destroy
        if: always()
        working-directory: terraform
        env:
          TF_VAR_image_tag: ${{ needs.build.outputs.short_hash }}
          TF_VAR_namespace: terraform
          TF_VAR_pr_number: ${{ github.event.number }}
        run: |
          terraform destroy -auto-approve
